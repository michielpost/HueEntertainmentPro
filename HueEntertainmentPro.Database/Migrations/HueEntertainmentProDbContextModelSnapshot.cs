// <auto-generated />
using HueEntertainmentPro.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HueEntertainmentPro.Database.Migrations
{
    [DbContext(typeof(HueEntertainmentProDbContext))]
    partial class HueEntertainmentProDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HueEntertainmentPro.Database.Models.Bridge", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreamingClientKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bridges");
                });

            modelBuilder.Entity("HueEntertainmentPro.Database.Models.ProArea", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProAreas");
                });

            modelBuilder.Entity("HueEntertainmentPro.Database.Models.ProAreaBridgeGroup", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("BridgeId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProAreaId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.HasKey("Id");

                    b.HasIndex("BridgeId");

                    b.HasIndex("ProAreaId");

                    b.ToTable("ProAreaGroups");
                });

            modelBuilder.Entity("HueEntertainmentPro.Database.Models.ProAreaBridgeGroup", b =>
                {
                    b.HasOne("HueEntertainmentPro.Database.Models.Bridge", "Bridge")
                        .WithMany()
                        .HasForeignKey("BridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HueEntertainmentPro.Database.Models.ProArea", "ProArea")
                        .WithMany("ProAreaBridgeGroups")
                        .HasForeignKey("ProAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bridge");

                    b.Navigation("ProArea");
                });

            modelBuilder.Entity("HueEntertainmentPro.Database.Models.ProArea", b =>
                {
                    b.Navigation("ProAreaBridgeGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
