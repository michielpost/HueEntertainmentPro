@using System.Text.Json.Serialization
@using HueApi.Models
@using System.Text.Json

<div class="json-node" style="margin-left:@(Level * 10)px">
    @if (!string.IsNullOrEmpty(Key))
    {
        <b>@Key:</b>
    }
    <div class="json-content">
        <ul>
            <li><b>id:</b> <span>@Resource.Id</span></li>

            @if (!string.IsNullOrEmpty(Resource.IdV1))
            {
                <li><b>id_v1:</b> <span>@Resource.IdV1</span></li>
            }

            <li><b>type:</b> <span>@Resource.Type</span></li>

            @if (Resource.Metadata is not null)
            {
                <li>
                    <b>metadata:</b>
                    <JsonViewer Element="@JsonSerializer.SerializeToElement(Resource.Metadata)" Level="@(Level + 1)" Bridge="@Bridge" />
                </li>
            }

            @if (Resource.CreationTime is not null)
            {
                <li><b>creation_time:</b> <span>@Resource.CreationTime</span></li>
            }

            @if (Resource.Owner is not null)
            {
                <li>
                    <b>owner:</b>
                    <JsonViewer Element="@JsonSerializer.SerializeToElement(Resource.Owner)" Level="@(Level + 1)" Bridge="@Bridge" />
                </li>
            }

            @if (Resource.Services is not null && Resource.Services.Count > 0)
            {
                <li>
                    <b>services:</b>
                    <ol>
                        @for (int i = 0; i < Resource.Services.Count; i++)
                        {
                            var keyName = $"[{i}]";
                            <li>
                                <JsonViewer Key="@keyName" Element="@JsonSerializer.SerializeToElement(Resource.Services[i])" Level="@(Level + 1)" Bridge="@Bridge" />
                            </li>
                        }
                    </ol>
                </li>
            }

            @if (Resource.ExtensionData.Any())
            {
                foreach (var kv in Resource.ExtensionData)
                {
                    var jsonElement = (JsonElement)kv.Value;
                    <JsonViewer Key="@kv.Key" Element="@jsonElement" Bridge="@Bridge" />
                }
            }

        </ul>
    </div>
</div>

@code {
    [Parameter] public string? Key { get; set; }
    [Parameter] public HueResource Resource { get; set; } = default!;
    [Parameter] public int Level { get; set; } = 0;
    [Parameter] public HueEntertainmentPro.Shared.Models.Bridge? Bridge { get; set; }

}
